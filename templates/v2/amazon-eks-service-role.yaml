---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS Service Role'

Resources:

  AWSServiceRoleForAmazonEKS:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Service:
            - eks.amazonaws.com
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      - "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
      - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      Policies:
      - PolicyName: AmazonEKSCustomResourcePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - eks:CreateCluster
            - eks:DeleteCluster
            - eks:DescribeCluster
            - eks:ListClusters
            - iam:GetRole
            - iam:PassRole
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - s3:GetObject
            - s3:PutObject
            - s3:GetObjectVersion
            Resource: "*"

Outputs:

  RoleArn:
    Description: The role that EKS will use to create AWS resources for Kubernetes clusters
    Value: !GetAtt AWSServiceRoleForAmazonEKS.Arn
    Export:
      Name: !Sub "${AWS::StackName}-RoleArn"

